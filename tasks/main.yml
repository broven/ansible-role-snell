---
- name: Install required packages
  package:
    name: unzip
    state: present

- name: Create installation directory
  file:
    path: "{{ snell_install_dir }}"
    state: directory
    mode: '0755'

- name: Set architecture fact
  set_fact:
    snell_arch: >-
      {%- if ansible_architecture == 'x86_64' -%}amd64
      {%- elif ansible_architecture == 'i386' -%}i386
      {%- elif ansible_architecture == 'aarch64' -%}aarch64
      {%- elif ansible_architecture == 'armv7l' -%}armv7l
      {%- else -%}unsupported{%- endif -%}

- name: Fail if architecture is not supported
  fail:
    msg: "Architecture {{ ansible_architecture }} is not supported"
  when: snell_arch == "unsupported"

- name: Check if snell service exists
  stat:
    path: /etc/systemd/system/snell.service
  register: service_file

- name: Download Snell
  get_url:
    url: "https://dl.nssurge.com/snell/snell-server-{{ snell_version }}-linux-{{ snell_arch }}.zip"
    dest: "/tmp/snell-server.zip"
    mode: '0644'

- name: Create temp directory for extraction
  file:
    path: "/tmp/snell-extract"
    state: directory
    mode: '0755'

- name: Extract Snell archive
  unarchive:
    src: "/tmp/snell-server.zip"
    dest: "/tmp/snell-extract"
    remote_src: yes

- name: Install Snell binary
  copy:
    src: "/tmp/snell-extract/snell-server"
    dest: "{{ snell_install_dir }}/snell-server"
    mode: '0755'
    remote_src: yes
  notify: restart snell

- name: Create Snell configuration
  template:
    src: snell-server.conf.j2
    dest: /etc/snell-server.conf
    mode: '0644'
  notify: restart snell
  register: snell_config
  until: snell_config is succeeded
  retries: 5
  delay: 10

- name: Create systemd service file
  template:
    src: snell.service.j2
    dest: /etc/systemd/system/snell.service
    mode: '0644'
  when: not service_file.stat.exists
  notify: restart snell

- name: Clean up temporary files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/tmp/snell-server.zip"
    - "/tmp/snell-extract"

- name: Ensure snell service is enabled and started
  systemd:
    name: snell
    state: started
    enabled: yes
    daemon_reload: yes 